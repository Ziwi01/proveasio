---
# gita installation
# For usage see README.md
#
# Source: https://github.com/nosarthur/gita
- name: "[gita] Install Gita specific version"
  ansible.builtin.pip:
    name: "gita=={{ pip_packages['gita'] }}"
    executable: "{{ ansible_env.HOME }}/.pyenv/shims/pip3"
  register: pip_out
  changed_when: "'Requirement already satisfied' not in pip_out.stdout"
  when: pip_packages['gita'] != 'latest'

- name: "[gita] Install Gita latest version"
  ansible.builtin.pip:
    name: "gita"
    executable: "{{ ansible_env.HOME }}/.pyenv/shims/pip3"
    extra_args: --upgrade
  register: pip_out
  changed_when: "'Requirement already satisfied' not in pip_out.stdout"
  when: pip_packages['gita'] == 'latest'

- name: "[gita] Get installed Gita version"
  ansible.builtin.shell: |
    set -e -o pipefail
    {{ ansible_env.HOME }}/.pyenv/shims/pip3 show gita | grep Version | awk '{print $2}'
  args:
    executable: /bin/bash
  changed_when: false
  register: gita_version
  tags:
    - versions

- name: "[gita] Save used version"
  vars:
    app: gita
    target_version:
      pip_packages:
        gita: "{{ gita_version.stdout }}"
    yq_query: ".pip_packages.gita = \"{{ gita_version.stdout }}\""
  ansible.builtin.include_role:
    name: common
    tasks_from: save_version.yml
    apply:
      tags:
        - versions
  tags:
    - versions
