---
# Ensure local bin/opt directories are there
- name: "[Software] Ensure dotted directories are there"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - .local/bin
    - .local/opt
    - .config
    - .lsp
  tags:
    - always

# Include override variables
- name: "[Software] Include ansible/vars/overrides.yml"
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ playbook_dir }}/vars/overrides.yml"
      skip: true
  tags:
    - always

# Common software
- name: "[Software] Install packages"
  ansible.builtin.include_tasks:
    file: packages.yml
    apply:
      tags:
        - software
        - software_packages
  when: "'packages' not in software_tasks_exclude"
  tags:
    - software
    - versions

# Install `yq` YAML parser
# Used for editing YAML files for versions and release purposes.
- name: "[Software] Install yq"
  ansible.builtin.include_tasks:
    file: yq.yml
    apply:
      tags:
        - software
        - yq
  tags:
    - software
    - versions
    - yq

# Latest GIT
- name: "[Software] Install git"
  ansible.builtin.include_tasks:
    file: git.yml
    apply:
      tags:
        - software
        - git
  when: "'git' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - git

# ripgrep
- name: "[Software] Install ripgrep"
  ansible.builtin.include_tasks:
    file: ripgrep.yml
    apply:
      tags:
        - software
        - ripgrep
  when: "'ripgrep' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - ripgrep

# FD
- name: "[Software] Install fd"
  ansible.builtin.include_tasks:
    file: fd.yml
    apply:
      tags:
        - software
        - fd
  when: "'fd' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - fd

# ls-with-git-status
- name: "[Software] Install lsg"
  ansible.builtin.include_tasks:
    file: lsg.yml
    apply:
      tags:
        - software
        - lsg
  when: "'lsg' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - lsg

# FZF (fuzzy-finder)
- name: "[Software] Install fzf"
  ansible.builtin.include_tasks:
    file: fzf.yml
    apply:
      tags:
        - software
        - fzf
  when: "'fzf' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - fzf

# Diff-so-fancy
- name: "[Software] Install diff-so-fancy"
  ansible.builtin.include_tasks:
    file: diff-so-fancy.yml
    apply:
      tags:
        - software
        - diff-so-fancy
  when: "'diff-so-fancy' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - diff-so-fancy

# Git-fuzzy
- name: "[Software] Install git-fuzzy"
  ansible.builtin.include_tasks:
    file: git-fuzzy.yml
    apply:
      tags:
        - software
        - git-fuzzy
  when: "'git-fuzzy' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - git-fuzzy

# DRY (moncho/dry)
- name: "[Software] Install dry"
  ansible.builtin.include_tasks:
    file: dry.yml
    apply:
      tags:
        - software
        - dry
  when: "'dry' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - dry

# LazyGIT
- name: "[Software] Install lazygit"
  ansible.builtin.include_tasks:
    file: lazygit.yml
    apply:
      tags:
        - software
        - lazygit
  when: "'lazygit' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - lazygit

# Gita
- name: "[Software] Install gita"
  ansible.builtin.include_tasks:
    file: gita.yml
    apply:
      tags:
        - software
        - gita
  when: "'gita' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - gita

- name: "[Software] Install bottom"
  ansible.builtin.include_tasks:
    file: bottom.yml
    apply:
      tags:
        - software
        - bottom
  when: "'bottom' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - bottom

# Pay respects
- name: "[Software] Install pay-respects"
  ansible.builtin.include_tasks:
    file: pay-respects.yml
    apply:
      tags:
        - software
        - pay-respects
  when: "'pay-respects' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - pay-respects

# Kubectl context switcher
- name: "[Software] Install kubeswitch"
  ansible.builtin.include_tasks:
    file: kubeswitch.yml
    apply:
      tags:
        - software
        - kubeswitch
  when: "'kubeswitch' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - kubeswitch

# AZ subscription switcher
- name: "[Software] Install az-account-switcher"
  ansible.builtin.include_tasks:
    file: az-account-switcher.yml
    apply:
      tags:
        - software
        - az-account-switcher
  when: "'az-account-switcher' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - az-account-switcher

# Zoxide
- name: "[Software] Install zoxide"
  ansible.builtin.include_tasks:
    file: zoxide.yml
    apply:
      tags:
        - software
        - zoxide
  when: "'zoxide' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - zoxide

# Helm
- name: "[Software] Install helm"
  ansible.builtin.include_tasks:
    file: helm.yml
    apply:
      tags:
        - software
        - helm
  when: "'helm' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - helm

# ZSH
- name: "[Software] Install zsh"
  ansible.builtin.include_tasks:
    file: zsh.yml
    apply:
      tags:
        - software
        - zsh
  when: "'zsh' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - zsh

# Win32yank (windows clipboard support for Neovim)
- name: "[Software] Install w32yank"
  ansible.builtin.include_tasks:
    file: w32yank.yml
    apply:
      tags:
        - software
        - w32yank
  when: "'w32yank' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - w32yank

# TMUX Plugins
- name: "[Software] Install tmux"
  ansible.builtin.include_tasks:
    file: tmux.yml
    apply:
      tags:
        - software
        - tmux
  when: "'tmux' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - tmux

- name: "[Software] Docker"
  ansible.builtin.include_tasks:
    file: docker.yml
    apply:
      tags:
        - software
        - docker
  when: "'docker' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - docker

- name: "[Software] kubectl"
  ansible.builtin.include_tasks:
    file: kubectl.yml
    apply:
      tags:
        - software
        - kubectl
  when: "'kubectl' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - kubectl

- name: "[Software] kubecolor"
  ansible.builtin.include_tasks:
    file: kubecolor.yml
    apply:
      tags:
        - software
        - kubecolor
  when: "'kubecolor' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - kubecolor

- name: "[Software] KinD"
  ansible.builtin.include_tasks:
    file: kind.yml
    apply:
      tags:
        - software
        - kind
  when: "'kind' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - kind

- name: "[Software] k9s"
  ansible.builtin.include_tasks:
    file: k9s.yml
    apply:
      tags:
        - software
        - k9s
  when: "'k9s' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - k9s

# Ruby Version Manager
- name: "[Software] Install Ruby Version Manager"
  ansible.builtin.include_tasks:
    file: rvm.yml
    apply:
      tags:
        - software
        - rvm
  when: "'rvm' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - rvm

# SDKMan!
- name: "[Software] Install SDKMAN!"
  ansible.builtin.include_tasks:
    file: sdkman.yml
    apply:
      tags:
        - software
        - sdkman
  when: "'sdkman' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - sdkman

# Node Version Manager
- name: "[Software] Install Node Version Manager"
  ansible.builtin.include_tasks:
    file: nvm.yml
    apply:
      tags:
        - software
        - nvm
  when: "'nvm' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - nvm

# Rust
- name: "[Software] Install Rust language with Cargo"
  ansible.builtin.include_tasks:
    file: rust.yml
    apply:
      tags:
        - software
        - rust
  when: "'rust' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - rust

# GVM
- name: "[Software] Install Go Version Manager"
  ansible.builtin.include_tasks:
    file: gvm.yml
    apply:
      tags:
        - software
        - gvm
  when: "'gvm' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - gvm

# Ansible PIP
- name: "[Software] Install Ansible"
  ansible.builtin.include_tasks:
    file: ansible.yml
    apply:
      tags:
        - software
        - ansible
  when: "'ansible' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - ansible

# Neovim
- name: "[Software] Install Neovim"
  ansible.builtin.include_tasks:
    file: neovim.yml
    apply:
      tags:
        - software
        - neovim
  when: "'neovim' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - neovim

# Puppet
- name: "[Software] Install Puppet"
  ansible.builtin.include_tasks:
    file: puppet.yml
    apply:
      tags:
        - software
        - puppet
  when: "'puppet' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - puppet

- name: "[Software] Terraform"
  ansible.builtin.include_tasks:
    file: terraform.yml
    apply:
      tags:
        - software
        - terraform
  when: "'terraform' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - terraform

- name: "[Software] Terragrunt"
  ansible.builtin.include_tasks:
    file: terragrunt.yml
    apply:
      tags:
        - software
        - terragrunt
  when: "'terragrunt' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - terragrunt

- name: "[Software] Azure CLI"
  ansible.builtin.include_tasks:
    file: azurecli.yml
    apply:
      tags:
        - software
        - azurecli
  when: "'azurecli' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - azurecli

- name: "[Software] AWS CLI"
  ansible.builtin.include_tasks:
    file: awscli.yml
    apply:
      tags:
        - software
        - awscli
  when: "'awscli' not in software_tasks_exclude"
  tags:
    - software
    - versions
    - awscli
