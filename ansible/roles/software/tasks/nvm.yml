# Install Node Version Manager
# Some tools get installed in node (language servers etc.)
# Source: https://github.com/nvm-sh/nvm
---
- name: "[NVM] Get Github URL for proper version"
  vars:
    app: nvm
    repo: nvm-sh/nvm
    version_query: curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | jq .name -r | cut -f2 -d'v'
  ansible.builtin.include_role:
    name: common
    tasks_from: github_version.yml
    apply:
      tags:
        - versions
  tags:
    - versions

- name: "[NVM] Create ~/.local/opt/nvm"
  ansible.builtin.file:
    state: directory
    path: "{{ ansible_env.HOME }}/.local/opt/nvm"
    mode: "0755"

- name: "[NVM] Install NVM" # noqa no-changed-when
  ansible.builtin.shell: |
    set -e -o pipefail
    export NVM_DIR="{{ ansible_env.HOME }}/.local/opt/nvm"
    wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_version }}/install.sh | bash
  args:
    executable: /bin/bash
    creates: "{{ ansible_env.HOME }}/.local/opt/nvm/nvm.sh"
  register: nvm_result
  changed_when: "'already installed' not in nvm_result.stdout"

- name: "[NVM] Show NVM install" # noqa no-changed-when
  ansible.builtin.debug:
    var: nvm_result.stdout

# TODO: Check if this version is already there for this user
- name: "[NVM] Install Node {{ node_version }}" # noqa no-changed-when
  ansible.builtin.shell: ". {{ ansible_env.HOME }}/.local/opt/nvm/nvm.sh; nvm install {{ node_version }} --default"
  args:
    executable: /bin/bash

- name: "[NVM] Set default Node to {{ node_version }}" # noqa no-changed-when
  ansible.builtin.shell: ". {{ ansible_env.HOME }}/.local/opt/nvm/nvm.sh; nvm alias default {{ node_version }}"
  args:
    executable: /bin/bash

- name: "[NVM] Install Node default packages" # noqa no-changed-when
  ansible.builtin.shell: ". {{ ansible_env.HOME }}/.local/opt/nvm/nvm.sh; npm install -g {{ item }}"
  args:
    executable: /bin/bash
  loop: "{{ npm_default_packages }}"

- name: "[NVM] Save used NVM version"
  vars:
    app: nvm
    target_version:
      github_packages:
        nvm: "{{ nvm_version }}"
    query: '.github_packages.nvm = "{{ nvm_version }}"'
  ansible.builtin.include_role:
    name: common
    tasks_from: save_version.yml
    apply:
      tags:
        - versions
  tags:
    - versions

- name: "[NVM] Save used Node version"
  vars:
    app: node
    target_version:
      node_version: "{{ node_version }}"
    query: '.node_version = "{{ node_version }}"'
  ansible.builtin.include_role:
    name: common
    tasks_from: save_version.yml
    apply:
      tags:
        - versions
  tags:
    - versions
